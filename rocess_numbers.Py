def main():
    print("=== –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–µ–ø–µ–Ω–µ–π ===")
    print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏, –∑–∞—Ç–µ–º —Å—Ç–µ–ø–µ–Ω—å –¥–ª—è –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è\n")
    
    items = []
    
    # –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    while True:
        try:
            num_items = int(input("–°–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å? "))
            if num_items > 0:
                break
            print("üö´ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!")
        except ValueError:
            print("üö´ –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3)")

    # –í–≤–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    for i in range(1, num_items + 1):
        while True:
            item = input(f"–≠–ª–µ–º–µ–Ω—Ç {i}: ")
            if item.replace('.', '', 1).replace('-', '', 1).isdigit():
                items.append(float(item))
                break
            elif item.lstrip('-').replace('.', '', 1).isdigit():
                print("üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É –¥–ª—è –¥—Ä–æ–±–µ–π")
            else:
                items.append(item)
                break
    
    # –í–≤–æ–¥ —Å—Ç–µ–ø–µ–Ω–∏
    while True:
        try:
            power = float(input("\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å: "))
            break
        except ValueError:
            print("üö´ –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2 –∏–ª–∏ 3.5)")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–≤–æ–¥
    print("\nüîπ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for item in items:
        if isinstance(item, (int, float)):
            try:
                result = item ** power
                if isinstance(result, complex):
                    print(f"–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —á–∏—Å–ª–æ: ({item})^{power} = {result}")
                else:
                    print(f"–ß–∏—Å–ª–æ: {item}^{power} = {result:.4f}" if isinstance(result, float) else f"–ß–∏—Å–ª–æ: {item}^{power} = {result}")
            except ZeroDivisionError:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: 0 –Ω–µ–ª—å–∑—è –≤–æ–∑–≤–µ—Å—Ç–∏ –≤ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç–µ–ø–µ–Ω—å")
        else:
            try:
                power_int = int(power)
                if power_int >= 0:
                    print(f"–°—Ç—Ä–æ–∫–∞: '{item}' √ó {power_int} = '{item * power_int}'")
                else:
                    print(f"‚ö†Ô∏è –î–ª—è —Å—Ç—Ä–æ–∫ —Å—Ç–µ–ø–µ–Ω—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å ‚â• 0 (–≤—ã –≤–≤–µ–ª–∏ {power_int})")
            except ValueError:
                print(f"‚ö†Ô∏è –î–ª—è —Å—Ç—Ä–æ–∫ —Å—Ç–µ–ø–µ–Ω—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º (–≤—ã –≤–≤–µ–ª–∏ {power})")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()